fp <- popcycle::create_filter_params(inst, fsc = ip$fsc, d1 = ip$d1, d2 = ip$d2, min_d1 = -5000, min_d2 = -5000, width = 15000)
fid <- popcycle::save_filter_params(db, fp)
fp$filter_id <- fid
big_filter_params <- rbind(big_filter_params, fp)
filter_plan[i, "filter_id"] <- fid
}
inflection_point
?splancs::getpoly
goo <- splancs::getpoly()
goo
q()
install.packages("splancs")
q()
library(tidyverse)
library(popcycle)
library(arrow)
library(grid)
library(gridExtra)
path <- "/Users/annettehynes/Library/CloudStorage/GoogleDrive-ahynes@uw.edu/Shared drives/SeaFlow-VCT/snakemake/"
local_path <- "~/Documents/SeaFlow/Cruise_data/"
save_path <- "~/Documents/SeaFlow/bead_position/output/"
source("~/Documents/SeaFlow/bead_position/beadLocate.R")
cruise <- "KiloMoana_1"
this_save_path <- paste0(save_path, cruise, "/")
fsc_spread <- 10000
inst <- "740"
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
db <- paste0(local_path, cruise, "/", cruise, ".db")
evt_file <- paste0(path, cruise, "/sample/", cruise, ".beads-sample-25k-fsc-chl-pe.parquet")
evt <- arrow::read_parquet(evt_file)
evt <- dplyr::filter(evt, D1 > 10 & D2 > 0)   # Filter out the multitude of low D1, D2
big_filter_params <- NULL
filter_plan <- data.frame(start_date = this_bead$start_date, filter_id = NA)
quartz()
for (i in seq(1, nrow(this_bead))){
t1 <- this_bead$start_date[i]
print(t1)
if (i < nrow(this_bead)){
t2 <- this_bead$start_date[i + 1]
}else{
t2 <- evt$date[nrow(evt)]
}
this_evt <- dplyr::filter(evt, date >= t1 & date <= t2)
this_evt <- dplyr::slice_sample(this_evt, n = 100000)
ip <- popcycle::inflection_point(this_evt)
fp <- popcycle::create_filter_params(inst, fsc = ip$fsc, d1 = ip$d1, d2 = ip$d2, min_d1 = -5000, min_d2 = -5000, width = 15000)
fid <- popcycle::save_filter_params(db, fp)
fp$filter_id <- fid
big_filter_params <- rbind(big_filter_params, fp)
filter_plan[i, "filter_id"] <- fid
}
library(MASS)
detach("package:MASS", unload = TRUE)
install.packages("tidyverse")
install.packages("gridExtra")
install.packages("arrow")
install.packages("splancs")
install.packages("doParallel")
install.packages("matrixStats")
install.packages("optparse")
install.packages("RSQLite")
install.packages("maps")
install.packages("mapdata")
install.packages("viridis")
install.packages("viridisLite")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("flowCore")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("flowDensity")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rain")
library(tidyverse)
library(popcycle)
library(arrow)
library(grid)
library(gridExtra)
path <- "/Users/annettehynes/Library/CloudStorage/GoogleDrive-ahynes@uw.edu/Shared drives/SeaFlow-VCT/snakemake/"
local_path <- "~/Documents/SeaFlow/Cruise_data/"
save_path <- "~/Documents/SeaFlow/bead_position/output/"
source("~/Documents/SeaFlow/bead_position/beadLocate.R")
#######################
cruise <- "KiloMoana_1"
this_save_path <- paste0(save_path, cruise, "/")
fsc_spread <- 10000
inst <- "740"
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
# build filter and plan tables
db <- paste0(local_path, cruise, "/", cruise, ".db")
evt_file <- paste0(path, cruise, "/sample/", cruise, ".beads-sample-25k-fsc-chl-pe.parquet")
evt <- arrow::read_parquet(evt_file)
evt <- dplyr::filter(evt, D1 > 10 & D2 > 0)   # Filter out the multitude of low D1, D2
big_filter_params <- NULL
filter_plan <- data.frame(start_date = this_bead$start_date, filter_id = NA)
install.packages("zoo")
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
db <- paste0(local_path, cruise, "/", cruise, ".db")
evt_file <- paste0(path, cruise, "/sample/", cruise, ".beads-sample-25k-fsc-chl-pe.parquet")
evt <- arrow::read_parquet(evt_file)
evt <- dplyr::filter(evt, D1 > 10 & D2 > 0)   # Filter out the multitude of low D1, D2
big_filter_params <- NULL
filter_plan <- data.frame(start_date = this_bead$start_date, filter_id = NA)
quartz()
for (i in seq(1, nrow(this_bead))){
t1 <- this_bead$start_date[i]
print(t1)
if (i < nrow(this_bead)){
t2 <- this_bead$start_date[i + 1]
}else{
t2 <- evt$date[nrow(evt)]
}
this_evt <- dplyr::filter(evt, date >= t1 & date <= t2)
this_evt <- dplyr::slice_sample(this_evt, n = 100000)
ip <- popcycle::inflection_point(this_evt)
fp <- popcycle::create_filter_params(inst, fsc = ip$fsc, d1 = ip$d1, d2 = ip$d2, min_d1 = -5000, min_d2 = -5000, width = 15000)
fid <- popcycle::save_filter_params(db, fp)
fp$filter_id <- fid
big_filter_params <- rbind(big_filter_params, fp)
filter_plan[i, "filter_id"] <- fid
}
cruise_list <- c("GP15_1", "GP15_2", "HOT321", "HOT326", "HOT331", "HOT332", "HOT338",
"KiloMoana_1", "KM1906_towfish", "KM1923_740", "Thompson_4",
"Thompson_5", "TN266", "Tokyo_1", "Tokyo_2", "KM1712", "KM1919",
"SCOPE-PARAGON", "TN396_740", "TN397_740", "TN413"
)
source(paste0(local_path, "beadLocate.R"))
source("~/Documents/SeaFlow/bead_position/beadLocate.R")
for (cruise in cruise_list){
print(cruise)
this_bead <- beadLocate(cruise, local_path, fsc_spread = 10000)
}
install.packages("googlesheets4")
library(googlesheets4)
meta <- googlesheets4::range_read('https://docs.google.com/spreadsheets/d/1Tsi7OWIZWfCQJqLDpId2aG_i-8Cp-p63PYjjvDkOtH4/edit#gid=0')
meta
meta$Instrument
official.cruise <- paste(meta[which(meta$cruise == cruise),'Cruise ID'])
official.cruise
unlist(meta$Instrument)
meta$inst <- stringr::str_sub(unlist(meta$Instrument), 1, 3)
meta$inst
?grep
grep(cruise, meta$cruise)
for (cruise in cruise_list){
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
ind <- grep(cruise, meta$cruise)
inst <- meta$inst(ind)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
}
for (cruise in cruise_list){
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
ind <- grep(cruise, meta$cruise)
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
}
save_path
?mkdir
?create.dir
?dir.create
if(!dir.exists(this_save_path)) dir.create(this_save_path)
for (cruise in cruise_list){
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
}
inflection_point
meta
meta <- googlesheets4::range_read('https://docs.google.com/spreadsheets/d/1Tsi7OWIZWfCQJqLDpId2aG_i-8Cp-p63PYjjvDkOtH4/edit#gid=0')
meta$inst <- stringr::str_sub(unlist(meta$Instrument), 1, 3)
cruise <- "SCOPE-PARAGON"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")K
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.5, fsc_spread = fsc_spread)
this_bead
q()
q()
library(tidyverse)
library(popcycle)
library(arrow)
library(grid)
library(gridExtra)
path <- "/Users/annettehynes/Library/CloudStorage/GoogleDrive-ahynes@uw.edu/Shared drives/SeaFlow-VCT/snakemake/"
local_path <- "~/Documents/SeaFlow/Cruise_data/"
save_path <- "~/Documents/SeaFlow/bead_position/output/"
source("~/Documents/SeaFlow/bead_position/beadLocate.R")
#######################
### Apply to cruise ###
#######################
cruise <- "GP15_2"
this_save_path <- paste0(save_path, cruise, "/")
fsc_spread <- 10000
inst <- "751"
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, fsc_spread = fsc_spread)
db <- paste0(local_path, cruise, "/", cruise, ".db")
evt_file <- paste0(path, cruise, "/sample/", cruise, ".beads-sample-25k-fsc-chl-pe.parquet")
evt <- arrow::read_parquet(evt_file)
evt <- dplyr::filter(evt, D1 > 10 & D2 > 0)   # Filter out the multitude of low D1, D2
big_filter_params <- NULL
filter_plan <- data.frame(start_date = this_bead$start_date, filter_id = NA)
for (i in seq(1, nrow(this_bead))){
t1 <- this_bead$start_date[i]
print(t1)
if (i < nrow(this_bead)){
t2 <- this_bead$start_date[i + 1]
}else{
t2 <- evt$date[nrow(evt)]
}
this_evt <- dplyr::filter(evt, date >= t1 & date <= t2)
this_evt <- dplyr::slice_sample(this_evt, n = 100000)
ip <- popcycle::inflection_point(this_evt)
fp <- popcycle::create_filter_params(inst, fsc = ip$fsc, d1 = ip$d1, d2 = ip$d2, min_d1 = -5000, min_d2 = -5000, width = 15000)
fid <- popcycle::save_filter_params(db, fp)
fp$filter_id <- fid
big_filter_params <- rbind(big_filter_params, fp)
filter_plan[i, "filter_id"] <- fid
}
filter_plan
big_filter_params
nrow(this_bead)
popcycle::save_filter_plan(db, filter_plan)
filter_table <- popcycle::get_filter_table(db)
filter_table
filter_plan
filter_table$id
filter_table <- filter_table[46:69, ]
filter_table
data.frame(filter_table)
file_ft <- paste0(save_path, cruise, "/", cruise, ".filter_params.filter.manual.tsv")
write.table(filter_table, file = file_ft, row.names = FALSE, sep = "\t")
file_fplan <- paste0(save_path, cruise, "/", cruise, ".filter_params.filter_plan.manual.tsv")
write.table(filter_plan, file = file_fplan, row.names = FALSE, sep = "\t")
filter_table_auto <- readr::read_tsv(paste0(save_path, cruise, "/", cruise, ".filter_params.filter.tsv"))
filter_plan_auto <- readr::read_tsv(paste0(save_path, cruise, "/", cruise, ".filter_params.filter_plan.tsv"))
this_bead
filter_plan_auto
filter_table_auto_merge <- filter_table_auto
colnames(filter_table_auto_merge)[1] <- "filter_id"
filter_table_auto_merge <- merge(filter_table_auto_merge, filter_plan_auto, by = "filter_id")
filter_table_auto_merge <- data.table::setorder(filter_table_auto_merge, start_date)
colnames(filter_table_auto_merge) <- paste0(colnames(filter_table_auto_merge), "_auto")
colnames(filter_table_auto_merge)[3] <- "quantile"
colnames(filter_table_auto_merge)[16] <- "start_date"
filter_table_merge <- filter_table
colnames(filter_table_merge)[1] <- "filter_id"
filter_table_merge <- merge(filter_table_merge, filter_plan, by = "filter_id")
filter_table_merge <- data.table::setorder(filter_table_merge, start_date)
big_filter_table <- dplyr::full_join(filter_table_merge, filter_table_auto_merge, by = c("start_date", "quantile"))
big_filter_table$quantile <- as.factor(big_filter_table$quantile)
p <- list()
q <- list()
r <- list()
for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1]))
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1]))
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1]))
}
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
quartz()
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
p <- list()
q <- list()
r <- list()
for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
}
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
p <- list()
q <- list()
r <- list()
for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
}
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
p <- list()
q <- list()
r <- list()
for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
}
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
library(googlesheets4)
meta <- googlesheets4::range_read('https://docs.google.com/spreadsheets/d/1Tsi7OWIZWfCQJqLDpId2aG_i-8Cp-p63PYjjvDkOtH4/edit#gid=0')
meta$inst <- stringr::str_sub(unlist(meta$Instrument), 1, 3)
cruise <- "HOT331"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 6, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
this_bead
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, fsc_spread = fsc_spread)
cruise <- "HOT332"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, fsc_spread = fsc_spread)
cruise <- "KM1712"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.5, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.75, fsc_spread = fsc_spread)
cruise <- "KM1906_towfish"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.75, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.5, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.75, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.75, fsc_spread = 15000)
cruise <- "KM1919"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = 15000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 1, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 1, q_out = 0.25, fsc_spread = 20000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 1, q_out = 0.25, fsc_spread = 10000)
cruise <- "KM1923_740"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.5, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.75, fsc_spread = 10000)
q()
library(tidyverse)
library(grid)
library(gridExtra)
library(suncalc)
library(viridis)
library(latex2exp)
library(readxl)
library(marmap)
library(oce)
library(broom)
library(grDevices)
library(popcycle)
setwd("~/SeaFlow/Forks/SeaFlow_ALOHA/R")
dir(".")
# Download SeaFlow data from Zenodo (doi.org/10.5281/zenodo.7154076)
url <- "https://zenodo.org/record/7154076/files/SeaFlow_dataset_v1.5.xlsx"
file_name <- tempfile()
try(download.file(url,file_name,method="curl"))
if (is.na(file.size(file_name))) download.file(url, file_name,method="auto")
all_SF <- readxl::read_xlsx(file_name)
all_SF <- readxl::read_xlsx(file_name)
read_xlsx
check_file(file_name)
?readxl:::check_file
?readxl::check_file
file.size(file_name)
?file.size
url <- "https://zenodo.org/record/7154076/files/SeaFlow_dataset_v1.5.xlsx"
file_name <- tempfile()
try(download.file(url,file_name,method="auto"))
all_SF <- readxl::read_xlsx(file_name)
library(dunn.test)
library(ggpubr)
q()

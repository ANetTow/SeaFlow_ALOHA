for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
}
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
p <- list()
q <- list()
r <- list()
for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1])) +
coord_fixed()
}
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
p <- list()
q <- list()
r <- list()
for (i in seq(1, nrow(big_filter_table)/3)){
ind <- c(3*i - 2, 3*i - 1, 3*i)
this_chunk <- big_filter_table[ind, ]
print(ind)
print(this_chunk$start_date[1])
p[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_fsc_small, y = beads_fsc_small_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "FSC manual", y = "FSC beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
q[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D1, y = beads_D1_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D1 manual", y = "D1 beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
r[[i]] <- ggplot(this_chunk) +
geom_point(aes(x = beads_D2, y = beads_D2_auto, fill = quantile), pch = 21, size = 3) +
geom_abline(slope = 1, intercept = 0) +
theme_bw(base_size = 18) +
labs(x = "D2 manual", y = "D2 beadfinder", title = as.character(this_chunk$start_date[1])) +
theme(aspect.ratio = 1)
}
png(file = paste0(this_save_path, cruise, "_filter_params_manual_beadfinder.png"), width = 6000, height = 9000, res = 300)
gridExtra::grid.arrange(p[[1]], q[[1]], r[[1]], p[[2]], q[[2]], r[[2]], p[[3]], q[[3]], r[[3]], p[[4]], q[[4]], r[[4]],
p[[5]], q[[5]], r[[5]], p[[6]], q[[6]], r[[6]], p[[7]], q[[7]], r[[7]], p[[8]], q[[8]], r[[8]],
ncol = 3)
dev.off()
library(googlesheets4)
meta <- googlesheets4::range_read('https://docs.google.com/spreadsheets/d/1Tsi7OWIZWfCQJqLDpId2aG_i-8Cp-p63PYjjvDkOtH4/edit#gid=0')
meta$inst <- stringr::str_sub(unlist(meta$Instrument), 1, 3)
cruise <- "HOT331"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 6, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
this_bead
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, fsc_spread = fsc_spread)
cruise <- "HOT332"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, fsc_spread = fsc_spread)
cruise <- "KM1712"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.5, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.75, fsc_spread = fsc_spread)
cruise <- "KM1906_towfish"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.75, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.5, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.75, fsc_spread = fsc_spread)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.75, fsc_spread = 15000)
cruise <- "KM1919"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = 15000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 3, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 1, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 1, q_out = 0.25, fsc_spread = 20000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 1, q_out = 0.25, fsc_spread = 10000)
cruise <- "KM1923_740"
print(cruise)
this_save_path <- paste0(save_path, cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.25, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.5, fsc_spread = 10000)
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = 5, q_out = 0.75, fsc_spread = 10000)
q()
install.packages("IRkernel")
q()
library(tidyverse)
library(popcycle)
library(grid)
library(gridExtra)
library(ggpubr)
library(suncalc)
library(viridis)
library(latex2exp)
library(readxl)
library(marmap)
library(oce)
library(broom)
library(grDevices)
library(dunn.test)
setwd("~/SeaFlow/SeaFlow_ALOHA/R")
url <- "https://zenodo.org/record/7154076/files/SeaFlow_dataset_v1.5.xlsx"
file_name <- tempfile()
try(download.file(url, file_name, method = "auto"))
# Read SeaFlow data
all_SF <- readxl::read_xlsx(file_name) %>%
mutate(time = as.POSIXct(time, format = "%Y-%m-%dT%H:%M:%S", tz = "UTC")) %>%
mutate(diam_croco = as.numeric(diam_croco),
Qc_croco = as.numeric(Qc_croco))
lat <- 22.75; lon <- -158
aloha <- all_SF %>% dplyr::filter(lat >= 22.25 & lat <= 23.25 & lon <= -157.5 & lon >= -158.5) %>%
dplyr::filter(time < as.POSIXct("2021-02-01", tz = "UTC"))
rm(all_SF)  # clear some memory
# Convert from short to long format for easier plotting
aloha_long <- aloha %>%
tidyr::pivot_longer(cols = -c(time, lat, lon, depth, cruise),
names_to = c('.value','pop'), names_sep = "_") %>%
arrange(time)
# Specific language:  use euk instead of picoeuk
group.colors <- c(prochloro = viridis::viridis(4)[1],
synecho = viridis::viridis(4)[2],
euk = viridis::viridis(4)[3],
croco = viridis::viridis(4)[4])
pop.labels <- c("Prochlorococcus", "Synechococcus", "Small eukaryotes", "Crocosphaera")
names(pop.labels) <- c("prochloro", "synecho", "euk", "croco")
aloha_long <- aloha_long %>%
mutate(pop = case_when(pop == 'picoeuk' ~ 'euk', TRUE ~ pop),
pop = factor(pop, levels = names(group.colors)), Program = "SeaFlow")
# Local time
aloha_long <- aloha_long %>%
mutate(local_time = lubridate::with_tz(time, tzone = 'HST'),
year = lubridate::year(local_time),
month = lubridate::month(local_time),
yday = lubridate::yday(local_time),
hour = lubridate::hour(local_time))
# Split double cruises by bumping late month cruises to the next month
aloha_long <- aloha_long %>%
mutate(month = case_when(cruise == "KM1709" ~ month + 1,
cruise == "KM2011" ~ month + 1, TRUE ~ month))
### Calculate daily means ###
aloha_long_mean <- aloha_long %>%
select(!c(cruise, depth)) %>%
group_by(Program, pop, year, yday, month) %>%
summarise_all(list(mean = mean, sd = sd), na.rm = TRUE) %>%
rename(abundance = abundance_mean,
DateTime = time_mean) %>%
mutate(date = paste(year, month))
midmonth <- as.Date(paste0(lubridate::year(aloha_long$local_time), '-', lubridate::month(aloha_long$local_time), '-15'), tz = 'HST')
sun_mid <- suncalc::getSunlightTimes(date = midmonth, lat = lat, lon = lon, keep = c('sunrise', 'sunset'), tz = "HST")
sunrise_mid <- lubridate::hour(sun_mid$sunrise) + lubridate::minute(sun_mid$sunrise)/60
all_aloha_hr <-  aloha_long %>%
mutate(suntime = local_time - (sunrise_mid * 3600),
sundate = lubridate::as_date(suntime),
sunhour = lubridate::hour(suntime)) %>%
dplyr::group_by(Program, cruise, pop, sunhour, sundate) %>%
dplyr::summarize_all(mean, na.rm = TRUE) %>%
mutate(date = lubridate::as_date(local_time)) %>%
arrange(time)
# Split double cruises by bumping late month cruises to the next month
all_aloha_hr <- all_aloha_hr %>%
mutate(month = case_when(cruise == "KM1709" ~ month + 1, cruise == "KM2011" ~ month + 1, TRUE ~ month),
month = stringr::str_pad(month, 2, side = "left", pad = 0))
### Curation
cruise_cut <- c('KOK1606', 'MGL1704', 'KM1906')   # These cruises pass through Station aloha so quickly, they are not helpful for diel patterns
all_aloha_hr_no_outlier <- subset(all_aloha_hr, !(cruise %in% cruise_cut))
ind_285 <- which(all_aloha_hr_no_outlier$cruise == "KOK1608" & all_aloha_hr_no_outlier$pop == "croco")  # Croco diameter is very strange and high during this cruise
all_aloha_hr_no_outlier <- all_aloha_hr_no_outlier[-ind_285, ]
all_aloha_hr_no_outlier$year <- as.factor(all_aloha_hr_no_outlier$year)
# Remove low abundance points first.
all_aloha_hr_robust <- subset(all_aloha_hr_no_outlier, abundance > 0.02) # 0.048 = About 30 cells per 3-min file
### Plot  DIAMETER and QC during time of day
# Get number of days in each population:
all_aloha_hr_robust <- all_aloha_hr_robust %>%
group_by(pop) %>%
mutate(n_days = length(unique(sundate)))
# Draw with dual axes
coef <- (0.261*((4*pi/3)^0.860))/(2^(3*0.860))  # relationship between Qc and diameter in Ribalet et al, 2019
expo <- 3*0.860
med_diam <- all_aloha_hr_robust %>%
dplyr::group_by(pop) %>%
summarize(median = median(diam, na.rm = TRUE))
HOT_POC <- read.csv(paste0("../Data/HOT_PC_ATP.csv"), skip = 6, header = F)
POC_head <- read.csv(paste0("../Data/HOT_PC_ATP.csv"), skip = 3, nrows = 1)
colnames(HOT_POC) <- colnames(POC_head)
HOT_POC$cruise <- paste0('HOT', substr(as.character(HOT_POC$botid), 1, 3))
HOT_POC[HOT_POC == -9] <- NA
HOT_POC$date <- str_pad(HOT_POC$date, 6, side = "left", pad = 0)
HOT_POC$time <- str_pad(HOT_POC$time, 6, side = "left", pad = 0)
HOT_POC$date <- as.POSIXct(paste0(HOT_POC$date, " ", HOT_POC$time), format = "%m%d%y %H%M%S", tz = "UTC")
HOT_POC$day <- lubridate::yday(HOT_POC$date)
HOT_POC$year <- lubridate::year(HOT_POC$date)
HOT_POC$month <- lubridate::month(HOT_POC$date)
mo_list_date <- c(as.POSIXct("2020-01-31 02:14:22", tz = "UTC"), as.POSIXct("2020-09-28 00:59:58", tz = "UTC"), as.POSIXct("2020-09-29 01:07:07", tz = "UTC"))
ind_mo <- which(HOT_POC$date %in% mo_list_date)
HOT_POC$month[ind_mo] <- HOT_POC$month[ind_mo] + 1
HOT_Clive <- HOT_POC %>%
dplyr::group_by(cruise) %>%
dplyr::summarize(PC = mean(pc, na.rm = TRUE), ATP = mean(atp, na.rm = TRUE), month = mean(month), year = mean(year))
PC_only <- HOT_POC[!is.na(HOT_POC$pc), ]
HOT_Clive <- merge(HOT_Clive, PC_only[, c("date", "cruise")])   # Carry the time stamp for PC
HOT_Clive$pc_live_250 <- (HOT_Clive$ATP*250/HOT_Clive$PC)/(12.01*10^3)  # percentage of live carbon and convert to g ATP/g C
HOT_Clive$pc_live_400 <- HOT_Clive$ATP*400/HOT_Clive$PC/(12.01*10^3)
HOT_Clive$pc_live_150 <- (HOT_Clive$ATP*150/HOT_Clive$PC)/(12.01*10^3)
umolpkg2ugpL <- 12.01*1024/(10^3)   # Convert umol C/kg to ug C/L using seawater density at Station ALOHA.
HOT_Clive$PC_ugpL <- HOT_Clive$PC*umolpkg2ugpL
HOT_Clive$C_live_150 <- HOT_Clive$PC_ugpL*HOT_Clive$pc_live_150
HOT_Clive$C_live_250 <- HOT_Clive$PC_ugpL*HOT_Clive$pc_live_250
HOT_Clive$C_live_400 <- HOT_Clive$PC_ugpL*HOT_Clive$pc_live_400
HOT_Clive <- na.omit(HOT_Clive)
all_aloha_cruise <- aloha_long %>%
group_by(pop, month, year) %>%
summarize(mean_biomass = mean(biomass, na.rm = TRUE))
all_aloha_cruise$month <- as.numeric(as.character(all_aloha_cruise$month))
all_aloha_cruise$year <- as.numeric(as.character(all_aloha_cruise$year))
total_aloha_cruise <- all_aloha_cruise %>%
group_by(month, year) %>%
summarize(total_biomass = sum(mean_biomass, na.rm = TRUE))
PC_all <- merge(HOT_Clive, total_aloha_cruise, by = c('month', 'year'))
PC_all$SF2PC_tot <- PC_all$total_biomass/PC_all$PC_ugpL
PC_all$SF2PC_live <- PC_all$total_biomass/PC_all$C_live_250
PC_all$bloom <- FALSE
ind_b1 <- which(PC_all$month == 7 & PC_all$year == 2016)	# Eukaryote blooms: July 2016, Aug 2016, Aug 2017, Aug 2019
ind_b2 <- which(PC_all$month == 8 & PC_all$year == 2016)
ind_b3 <- which(PC_all$month == 8 & PC_all$year == 2017)
ind_b4 <- which(PC_all$month == 8 & PC_all$year == 2019)
ind_bloom <- c(ind_b1, ind_b2, ind_b3, ind_b4)
PC_all$bloom[ind_bloom] <- TRUE
SF2PC <- PC_all %>%
dplyr::group_by(bloom) %>%
dplyr::summarize(live_mean = mean(SF2PC_live), live_sd = sd(SF2PC_live), live_min = min(SF2PC_live), live_max = max(SF2PC_live),
tot_mean = mean(SF2PC_tot), tot_sd = sd(SF2PC_tot), tot_min = min(SF2PC_tot), tot_max = max(SF2PC_tot))
HOT_Chl <- read.csv(paste0("../Data/HOT_Chl.csv"), skip = 6, header = F)
Chl_head <- read.csv(paste0("../Data/HOT_Chl.csv"), skip = 3, nrows = 1)
colnames(HOT_Chl) <- colnames(Chl_head)
HOT_Chl$cruise <- paste0('HOT', substr(as.character(HOT_Chl$botid), 1, 3))
HOT_Chl[HOT_Chl == -9] <- NA
HOT_Chl$date <- str_pad(HOT_Chl$date, 6, side = "left", pad = 0)
HOT_Chl$time <- str_pad(HOT_Chl$time, 6, side = "left", pad = 0)
HOT_Chl$date <- as.POSIXct(paste0(HOT_Chl$date, " ", HOT_Chl$time), format = "%m%d%y %H%M%S", tz = "UTC")
HOT_Chl$day <- lubridate::yday(HOT_Chl$date)
HOT_Chl$year <- lubridate::year(HOT_Chl$date)
HOT_Chl$month <- lubridate::month(HOT_Chl$date)
# Split double cruises by bumping late month cruises to the next month for KM2011/HOT323, HOT319 borders Jan and Feb
mo_list_date <- c(as.POSIXct("2020-01-31 02:14:22", tz = "UTC"), as.POSIXct("2020-09-28 00:59:58", tz = "UTC"), as.POSIXct("2020-09-29 01:07:07", tz = "UTC"))
ind_mo <- which(HOT_Chl$date %in% mo_list_date)
HOT_Chl$month[ind_mo] <- HOT_Chl$month[ind_mo] + 1
HOT_Chl_mo <- HOT_Chl %>%
dplyr::group_by(cruise) %>%
dplyr::summarize(chla = mean(chl, na.rm = TRUE), month = mean(month), year = mean(year))
Chl_all <- merge(HOT_Chl_mo, total_aloha_cruise, by = c('month', 'year'))
Chl_all$bloom <- FALSE
ind_b1 <- which(Chl_all$month == 7 & Chl_all$year == 2016)	# Eukaryote blooms: July 2016, Aug 2016, Aug 2017, Aug 2019
ind_b2 <- which(Chl_all$month == 8 & Chl_all$year == 2016)
ind_b3 <- which(Chl_all$month == 8 & Chl_all$year == 2017)
ind_b4 <- which(Chl_all$month == 8 & Chl_all$year == 2019)
ind_bloom <- c(ind_b1, ind_b2, ind_b3, ind_b4)
Chl_all$bloom[ind_bloom] <- TRUE
g <- ggplot(Chl_all) +
geom_point(aes(x = total_biomass, y = chla), pch = 21, size = 3, fill = "grey") +
geom_abline(slope = 1/128, intercept = 0) +
geom_abline(slope = 1/80, intercept = 0, linetype = 2) +
geom_abline(slope = 1/176, intercept = 0, linetype = 2) +
labs(x = "Biomass measured by SeaFlow ()")
theme_bw(base_size = 18)
print(g)
g <- ggplot(Chl_all) +
geom_point(aes(x = total_biomass, y = chla), pch = 21, size = 3, fill = "grey") +
geom_abline(slope = 1/128, intercept = 0) +
geom_abline(slope = 1/80, intercept = 0, linetype = 2) +
geom_abline(slope = 1/176, intercept = 0, linetype = 2) +
labs(x = latex2exp::TeX('Biomass measured by SeaFlow ($\\mu$g C L$^{-1}$)'), y = latex2exp::TeX('Fluorometric chlorophyll \\emph{a} ($\\mu$g C L$^{-1}$)')) +
theme_bw(base_size = 18)
print(g)
g <- ggplot(Chl_all) +
geom_point(aes(x = total_biomass, y = chla), pch = 21, size = 3, fill = "grey") +
geom_abline(slope = 1/128, intercept = 0) +
geom_abline(slope = 1/80, intercept = 0, linetype = 2) +
geom_abline(slope = 1/176, intercept = 0, linetype = 2) +
labs(x = latex2exp::TeX('Biomass measured by SeaFlow ($\\mu$g C L$^{-1}$)'), y = latex2exp::TeX('Fluorometric chlorophyll a ($\\mu$g C L$^{-1}$)')) +
theme_bw(base_size = 18)
print(g)
png(paste0("../Figures/Chla_vs_biomass.png"), width = 1000, height = 1000, res = 300)
print(g)
dev.off()
png(paste0("../Figures/Chla_vs_biomass.png"), width = 2000, height = 2000, res = 300)
print(g)
dev.off()
g <- ggplot(Chl_all) +
geom_point(aes(x = total_biomass, y = chla), pch = 21, size = 3, fill = "white") +
geom_abline(slope = 1/128, intercept = 0) +
geom_abline(slope = 1/80, intercept = 0, linetype = 2) +
geom_abline(slope = 1/176, intercept = 0, linetype = 2) +
labs(x = latex2exp::TeX('Biomass measured by SeaFlow ($\\mu$g C L$^{-1}$)'), y = latex2exp::TeX('Fluorometric chlorophyll a ($\\mu$g C L$^{-1}$)')) +
theme_bw(base_size = 18)
png(paste0("../Figures/Chla_vs_biomass.png"), width = 2000, height = 2000, res = 300)
print(g)
dev.off()
library(tidyverse)
library(popcycle)
library(arrow)
library(grid)
library(gridExtra)
save_path <- "~/SeaFlow/Clone/seaflow-multiFilter/"
source(paste0(save_path, "R/beadLocate.R"))
param_file <- paste0(save_path, "SeaFlow_multiFilter_parameters.tsv")
params <- readr::read_tsv(param_file)
cruise_list <- params$Cruise
cruise <- "KiloMoana_1"
library(googlesheets4)
meta <- googlesheets4::range_read('https://docs.google.com/spreadsheets/d/1Tsi7OWIZWfCQJqLDpId2aG_i-8Cp-p63PYjjvDkOtH4/edit#gid=0')
meta$inst <- stringr::str_sub(unlist(meta$Instrument), 1, 3)
for (cruise in cruise_list){
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = fsc_spread)
}
cruise <- "KiloMoana_1"
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = fsc_spread)
this_bead
k
q_out
fsc_spread
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = 5000)
cruise <- "GP15_2"
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = fsc_spread)
cruise <- "KiloMoana_1"
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = fsc_spread)
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = 3000)
cruise <- "GP15_2"
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = fsc_spread)
fsc_spread
k
q_ou
q_out
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = 5000)
cruise
cruise <- "TN397_740"
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = fsc_spread)
fsc_spread
print(cruise)
this_save_path <- paste0(save_path, "cruises/", cruise, "/")
if(!dir.exists(this_save_path)) dir.create(this_save_path)
ind <- grep(cruise, meta$cruise)[1]
inst <- meta$inst[ind]
ind_p <- grep(cruise, params$Cruise)[1]
k <- params$k[ind_p]
q_out <- params$q_out[ind_p]
fsc_spread <- params$fsc_spread[ind_p]
this_bead <- beadLocate(cruise, inst = inst, save_path = this_save_path, k = k, q_out = q_out, fsc_spread = 3000)
q()

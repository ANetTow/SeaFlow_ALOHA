help(package = marmap)
date()
library(tidyverse)#
library(grid)#
library(gridExtra)#
library(suncalc)#
library(viridis)#
library(latex2exp)#
library(readxl)#
library(marmap)#
library(oce)#
library(broom)#
library(grDevices)#
#renv::activate("~/Desktop/renvtest/popcycle/")#
library(popcycle)
group.colors <- c(prochloro = viridis::viridis(4)[1],#
                  synecho = viridis::viridis(4)[2], #
                  euk = viridis::viridis(4)[3],#
                  croco = viridis::viridis(4)[4])
rain_file1 <- '../Data/HOT_rain_results_2023_07_14_peaks.csv'  # peaks (relevant for Qc)#
big_rain_peak <- read.csv(rain_file1)
setwd('~/SeaFlow/Forks/SeaFlow_ALOHA')
rain_file1 <- '../Data/HOT_rain_results_2023_07_14_peaks.csv'  # peaks (relevant for Qc)#
big_rain_peak <- read.csv(rain_file1)
file.exists(rain_file1)
ls
getwd()
setwd('~/SeaFlow/Forks/SeaFlow_ALOHA/R')
rain_file1 <- '../Data/HOT_rain_results_2023_07_14_peaks.csv'  # peaks (relevant for Qc)
big_rain_peak <- read.csv(rain_file1)
rain_file2 <- '../Data/HOT_rain_results_2023_07_10_troughs.csv'   # troughs (relevant for abundance)#
big_rain_trough <- read.csv(rain_file2)
summary(big_rain_peak)
unique(big_rain_peak$param)
big_rain <- rbind(big_rain_peak, big_rain_trough)
big_rain_peak
head(big_rain_peak)
head(big_rain_trough)
summary(big_rain_trough)
t <- as.POSIXct(big_rain_trough$first_peak, format = '%Y-%m-%d %H:%M:%S', tz = "HST")#
pk_hr <- lubridate::hour(t)#
big_rain_trough$peak_hour <- pk_hr
big_rain <- rbind(big_rain_peak, big_rain_trough)
summary(big_rain)
sig <- big_rain$pVal <= 0.05    # Significant p-values--are they periodic or not?#
big_rain$periodic <- sig#
big_rain$pop <- gsub("picoeuk", 'euk', big_rain$pop)#
big_rain$pop <- factor(big_rain$pop, levels = names(group.colors))
TOD_2 <- cut(big_rain$peak_hour, breaks = c(-0.5, 1.5, 3.5, 5.5, 7.5, 9.5, 11.5, 13.5, 15.5, 17.5, 19.5, 21.5, 23.5),#
    labels = c( '00:00 - 01:59', '02:00 - 03:59', '04:00 - 05:59', '06:00 - 07:59', '08:00 - 09:59', '10:00 - 11:59', '12:00 - 13:59', '14:00 - 15:59', '16:00 - 17:59', '18:00 - 19:59', '20:00 - 21:59', '22:00 - 23:59'))#
TOD_2 <- factor(TOD_2, levels = c('Aperiodic', '00:00 - 01:59', '02:00 - 03:59', '04:00 - 05:59', '06:00 - 07:59', '08:00 - 09:59', '10:00 - 11:59', '12:00 - 13:59', '14:00 - 15:59', '16:00 - 17:59', '18:00 - 19:59', '20:00 - 21:59', '22:00 - 23:59'))#
TOD_2[which(big_rain$periodic == FALSE)] <- 'Aperiodic'#
big_rain$TOD_2 <- TOD_2
rain_trough <- subset(big_rain, param == "abundance")#
n.cruise <- length(unique(rain_trough$cruise))#
#
count_trough <- rain_trough %>%#
    group_by(pop, TOD_2) %>%#
    summarise(n = n())#
#
fig_name <- "../Figures/HOT_rain_abundance_bar_2hr_nocolor.pdf"#
pdf(fig_name, width = 8, height = 10)#
g <- ggplot2::ggplot(rain_trough, aes(TOD_2, fill = TOD_2)) +#
    geom_rect(aes(xmin = -Inf, xmax = 4.5, ymin = -Inf, ymax = Inf), fill = "grey", color = 'grey') +#
    geom_rect(aes(xmin = 11, xmax = Inf, ymin = -Inf, ymax = Inf), fill = "grey", color = 'grey') +#
    ggplot2::geom_bar(aes(y = after_stat(count)/n.cruise), alpha = 1, colour = 'black', fill = 'white', show.legend = FALSE) +#
    ggplot2::theme_bw(base_size = 22) +#
    #ggplot2::scale_fill_manual(values = day_colors) +#
    ggplot2::scale_x_discrete(labels = c('NA', '1', '3', '5', '7', '9', '11', '13', '15', '17', '19', '21', '23')) +#
    ggplot2::scale_y_continuous(labels = scales::percent_format(accuracy = 1L)) +#
    ggplot2::facet_wrap(vars(pop), ncol = 1) +#
    ggpubr::rotate_x_text() +#
    ggplot2::labs(x = 'Abundance Minima Hour (HST)', y = 'Percent of Cruises')#
print(g)#
dev.off()
rain_peak <- subset(big_rain, param == "Qc")#
n.cruise <- length(unique(rain_peak$cruise))#
#
fig_name <- "../Figures/HOT_rain_Qc_bar_2hr_nocolor.pdf"#
pdf(fig_name, width = 8, height = 10)#
g <- ggplot2::ggplot(rain_peak, aes(TOD_2, fill = TOD_2)) +#
    geom_rect(aes(xmin = -Inf, xmax = 4.5, ymin = -Inf, ymax = Inf), fill = "grey", color = 'grey') +#
    geom_rect(aes(xmin = 11, xmax = Inf, ymin = -Inf, ymax = Inf), fill = "grey", color = 'grey') +#
    ggplot2::geom_bar(aes(y = after_stat(count)/n.cruise), alpha = 1, colour = 'black', fill = 'white', show.legend = FALSE) +#
    ggplot2::theme_bw(base_size = 22) +#
    ggplot2::scale_x_discrete(labels = c('NA', '1', '3', '5', '7', '9', '11', '13', '15', '17', '19', '21', '23'), drop = FALSE) +#
    ggplot2::scale_y_continuous(labels = scales::percent_format(accuracy = 1L)) +#
    ggplot2::facet_wrap(vars(pop), ncol = 1) +#
    ggpubr::rotate_x_text() +#
    ggplot2::labs(x = 'Carbon Quota Maxima Hour (HST)', y = 'Percent of Cruises')#
print(g)#
dev.off()
